[{"/Users/mkeays/git/cookr/cookr-web/src/App.js":"1","/Users/mkeays/git/cookr/cookr-web/src/index.js":"2","/Users/mkeays/git/cookr/cookr-web/src/reportWebVitals.js":"3","/Users/mkeays/git/cookr/cookr-web/src/firebase.js":"4"},{"size":5458,"mtime":1608504730662,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1608422472483,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1608422472483,"results":"8","hashOfConfig":"6"},{"size":617,"mtime":1608493943388,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"rzj6ii",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mkeays/git/cookr/cookr-web/src/App.js",["19"],"import React, { Component } from 'react'\nimport firebase, { auth, provider } from './firebase.js'\nimport './App.css'\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentItem: '',\n            items: [],\n            user: null\n        }\n\n        this.listenToItemsCollection = this.listenToItemsCollection.bind(this)\n\n        this.removeItem = this.removeItem.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n\n        this.login = this.login.bind(this)\n        this.logout = this.logout.bind(this)\n    }\n\n    listenToItemsCollection(){\n        const itemsRef = firebase.database().ref('users');\n        itemsRef.on('value', (snapshot) => {\n            let users = snapshot.val()\n            let newState = []\n\n            for (let userId in users) {\n                let user = users[userId]\n                let items = user.items\n                for (let item in items) {\n                    newState.push({\n                        id: item,\n                        uid: userId,\n                        title: items[item].title,\n                        user: items[item].user\n                    })\n                }\n            }\n\n            this.setState({\n                items: newState\n            })\n        })\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ user })\n                this.listenToItemsCollection()\n            } \n        })\n    }\n\n    removeItem(itemId) {\n        const itemRef = firebase.database().ref(`/users/${this.state.user.uid}/items/${itemId}`);\n        itemRef.remove();\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        \n        const itemsRef = firebase.database().ref(`/users/${this.state.user.uid}/items`);\n        const item = {\n            title: this.state.currentItem,\n            user: this.state.user.displayName || this.state.user.email\n        }\n        \n        itemsRef.push(item);\n        \n        this.setState({\n            currentItem: '',\n            username: ''\n        })\n    }\n\n    logout() {\n        auth.signOut().then(() => {\n            this.setState({\n                user: null,\n                items: []\n            })\n        })\n    }\n\n    login() {\n        auth.signInWithPopup(provider).then((result) => {\n            const user = result.user\n            this.setState({ user })\n        })\n    }\n\n    render() {\n        return (\n            <div className='app'>\n                <header>\n                    <div className='wrapper'>\n                        <h1>Fun Food Friends</h1>\n                        {this.state.user ?\n                            <button onClick={this.logout}>Log Out</button>                \n                        :\n                            <button onClick={this.login}>Log In</button>              \n                        }\n                    </div>\n                </header>\n                {this.state.user ?\n                    <div>\n                        <div className='user-profile'>\n                            <img src={this.state.user.photoURL} />\n                        </div>\n                        <div className='container'>\n                            <section className='add-item'>\n                                <form onSubmit={this.handleSubmit}>\n                                    <input type=\"text\" name=\"username\" placeholder=\"What's your name?\" value={this.state.user.displayName || this.state.user.email} disabled />\n                                    <input type=\"text\" name=\"currentItem\" placeholder=\"What are you bringing?\" onChange={this.handleChange} value={this.state.currentItem} />\n                                    <button>Add Item</button>\n                                </form>\n                            </section>\n                            <section className='display-item'>\n                                <div className=\"wrapper\">\n                                    <ul>\n                                        {this.state.items.map((item) => {\n                                            return (\n                                                <li key={item.id}>\n                                                <h3>{item.title}</h3>\n                                                <p>brought by: {item.user}\n                                                    {item.user === this.state.user.displayName || item.user === this.state.user.email ?\n                                                        <button onClick={() => this.removeItem(item.id)}>Remove Item</button> : null\n                                                    }\n                                                </p>\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </section>\n                        </div>\n                    </div>\n                :\n                    <div className='wrapper'>\n                        <p>You must be logged in to see the potluck list and submit to it.</p>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\nexport default App;","/Users/mkeays/git/cookr/cookr-web/src/index.js",[],"/Users/mkeays/git/cookr/cookr-web/src/reportWebVitals.js",[],"/Users/mkeays/git/cookr/cookr-web/src/firebase.js",[],{"ruleId":"20","severity":1,"message":"21","line":118,"column":29,"nodeType":"22","endLine":118,"endColumn":67},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]